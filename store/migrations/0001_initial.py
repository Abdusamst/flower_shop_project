# Generated by Django 4.2.17 on 2025-01-25 19:18

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название')),
                ('description', models.TextField(verbose_name='Описание')),
                ('slug', models.CharField(max_length=50, unique=True)),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата добавления')),
                ('price', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Новая цена')),
                ('old_price', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Старая цена')),
                ('image', models.ImageField(blank=True, upload_to='items/', verbose_name='Изображение')),
                ('is_available', models.BooleanField(default=True, verbose_name='Доступно')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
                'ordering': ['-price'],
            },
        ),
        migrations.CreateModel(
            name='ItemTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
                ('slug', models.SlugField(allow_unicode=True, max_length=100, unique=True, verbose_name='slug')),
                ('image', models.ImageField(blank=True, upload_to='categories/', verbose_name='Изображение')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='Poster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, upload_to='posters/', verbose_name='Изображение')),
            ],
            options={
                'verbose_name': 'Постер',
                'verbose_name_plural': 'Постеры',
            },
        ),
        migrations.CreateModel(
            name='Seller',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=20, verbose_name='Номер телефона')),
                ('whatsapp', models.CharField(max_length=20, verbose_name='WhatsApp')),
                ('store_type', models.CharField(choices=[('warehouse', 'Склад'), ('shop', 'Магазин'), ('online_shop', 'Интернет-магазин')], max_length=20, verbose_name='Тип магазина')),
                ('stock_status', models.CharField(choices=[('in_stock', 'В наличии'), ('out_of_stock', 'Нет в наличии'), ('partial_stock', 'Частично в наличии')], max_length=20, verbose_name='Статус наличия товара')),
                ('store_address', models.CharField(max_length=255, verbose_name='Адрес магазина или склада')),
                ('store_name', models.CharField(max_length=255, verbose_name='Название магазина')),
                ('store_logo', models.ImageField(upload_to='store_logos/', verbose_name='Логотип магазина')),
                ('seller_name', models.CharField(max_length=255, verbose_name='Имя и фамилия продавца')),
                ('wants_to_sell_on_wildberries', models.BooleanField(default=False, verbose_name='Хотите продавать на Wildberries')),
                ('wants_to_sell_on_ozon', models.BooleanField(default=False, verbose_name='Хотите продавать на Ozon')),
                ('has_store_on_wildberries', models.BooleanField(default=False, verbose_name='Есть магазин на Wildberries')),
                ('has_store_on_ozon', models.BooleanField(default=False, verbose_name='Есть магазин на Ozon')),
            ],
        ),
        migrations.CreateModel(
            name='TaggedItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.IntegerField(db_index=True, verbose_name='object ID')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_tagged_items', to='contenttypes.contenttype', verbose_name='content type')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='store.itemtag', verbose_name='Категория')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
